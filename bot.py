import asyncio
import requests
from telegram import Bot

# üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TELEGRAM_TOKEN = '8227455166:AAEEbMRFJ1apJMm7Si1IoIYk0bJBL9Xl1Gw'
CHAT_ID = -1002650360570  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π
ACCOUNT_NAME = 'adrop.iu'
POLL_INTERVAL = 30  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥

EOS_API = f'https://eos.hyperion.eosrio.io/v2/history/get_actions?account={ACCOUNT_NAME}&limit=10'

# üß† –•—Ä–∞–Ω–∏–º —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
seen_tx_ids = set()

async def main():
    bot = Bot(token=TELEGRAM_TOKEN)

    # üöÄ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    await bot.send_message(chat_id=CHAT_ID, text="üöÄ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.")

    while True:
        try:
            response = requests.get(EOS_API)
            data = response.json()

            actions = data.get('actions', [])
            new_txs = []

            for action in actions:
                tx_id = action.get('trx_id')
                if not tx_id or tx_id in seen_tx_ids:
                    continue

                act_data = action.get('act', {}).get('data', {})
                symbol = act_data.get('symbol', '')
                quantity = act_data.get('quantity', '')

                if symbol != 'A' and not quantity.endswith(' A'):
                    continue

                from_account = act_data.get('from', '')
                to_account = act_data.get('to', '')
                memo = act_data.get('memo', '')

                msg = f"üì• *–ù–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è:*\n" \
                      f"*Quantity:* `{quantity}`\n" \
                      f"*From:* `{from_account}`\n" \
                      f"*To:* `{to_account}`\n" \
                      f"*Memo:* `{memo}`"

                await bot.send_message(chat_id=CHAT_ID, text=msg, parse_mode="Markdown")

                new_txs.append(tx_id)

            seen_tx_ids.update(new_txs)

            if new_txs:
                print(f"üëÄ –ù–∞–π–¥–µ–Ω–æ {len(new_txs)} –Ω–æ–≤—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π")

        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")

        await asyncio.sleep(POLL_INTERVAL)

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    asyncio.run(main())
